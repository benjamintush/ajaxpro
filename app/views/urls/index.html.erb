<!--#site-content-->
<div id="site-content">
  <section class="grid grid-pad">

    <%= form_for Url.new, :html => {:id => "url_form", :class => 'new_user_account'} do |f| %>
        <fieldset class="reg-form" style="border-bottom-left-radius: 0em 0em; border-bottom-right-radius: 0em 0em; padding-bottom: 10px">
          <p>
            <label for="user_account_login">Website URL:</label>
            <%= f.text_field :Url, :class => 'text-input', id: 'url' %>
          </p>
          <p class="sign-in-btn">
            <%= f.submit "Record URL", :class => 'button-primary',:id => 'RecordURL' %>
          </p>
        </fieldset>
    <% end %>

    <div class="reg-form" style="border-top-left-radius: 0em 0em; border-top-right-radius: 0em 0em; padding-top: 10px">
      <span class="or-rule">URLs</span>
      <ul id="urls_list" style="padding-left: 15px; font-size: 14px;">
        <li><em>Loading items...</em></li>

      </ul>
    </div>
    <button id="testbtn">click me</button>
  </section>
  <!-- #site-content -->
</div>

<script type="text/html" id="item_template">
  <li>${Url}</li>
</script>

<script>
    $.validator.addMethod("url", function(value, element) {
        return this.optional(element) || /^(http:\/\/www\.|https:\/\/www\.|http:\/\/|https:\/\/|www\.)[a-z0-9]+([\-\.]{1}[a-z0-9]+)*\.[a-z]{2,5}(:[0-9]{1,5})?(\/.*)?$/.test(value);
    }, "Please enter a valid url address.");

    $('#testbtn').click(function (e) {
        alert("hey it is clicking")
    });

    $(window.applicationCache).bind('error', function () {
        console.log('There was an error when loading the cache manifest.');
    });

    if(!(navigator.onLine)){
        alert("U'r Browser seems to be Offline! \n Your changes will be submitted once online!");
    }

    if (!localStorage["pendingItems"]) {
        localStorage["pendingItems"] = JSON.stringify([]);
    }

    $.retrieveJSON('/urls.json', function(data) {
        var pendingItems = $.parseJSON(localStorage["pendingItems"]);
//        $("#urls_list").html($("#item_template").tmpl(data));
        $("#urls_list").html($("#item_template").tmpl(data.concat(pendingItems)));
    });

    $('#url_form').submit(function (e) {
        e.preventDefault();
        var pendingItems = $.parseJSON(localStorage["pendingItems"]);
        var url = {"data":$(this).serialize(), "Url":$("#url").val()};
//        $("#item_template").tmpl(url).appendTo("#urls_list");
        $("#item_template").tmpl(url).prependTo("#urls_list");
        pendingItems.push(url);
        localStorage["pendingItems"] = JSON.stringify(pendingItems);
        $("#url").val("");
        sendPending();

    });

    $(function () {
        if ($.support.localStorage)
        {
            // Other code omitted.
        }
        else {
            alert("Time to upgrade your browser.")
        }
    });

    $(function () {
        // Other functions omitted.
        function sendPending() {
            if (window.navigator.onLine) {
                var pendingItems = $.parseJSON(localStorage["pendingItems"]);
                if (pendingItems.length > 0) {
                    var url = pendingItems[0];
                    $.post("/urls", url.data, function (data) {
                        var pendingItems = $.parseJSON(localStorage["pendingItems"]);
                        pendingItems.shift();
                        localStorage["pendingItems"] = JSON.stringify(pendingItems);
                        setTimeout(sendPending, 100);
                    });
                }
            }
        }
        sendPending();
    });
//
//    //    $.retrieveJSON('/urls.json', function(data) {
//    //        $("#urls_list").html($("#item_template").tmpl(data));
//    //    });
//
//    //    $.getJSON("/urls.json", function(data) {
//    //        $("#urls_list").html($("#item_template").tmpl(data));
//    //    });
</script>